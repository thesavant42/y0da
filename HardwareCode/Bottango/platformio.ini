; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html

[platformio]
src_dir = BottangoArduinoDriver
;src_dir = DFROBOT
data_dir = data
boards_dir = boards/
;monitor_port = /dev/cu.SLAB_USBtoUART
;upload_port = /dev/cu.SLAB_USBtoUART

[env]
framework = arduino
monitor_speed = 115200

[env:esp32]
platform = espressif32@6.3.0
framework = ${env.framework}
platform_packages = 
    platformio/framework-arduinoespressif32@^3.20011.230801
lib_deps =
    ;adafruit/Adafruit BusIO@^1.15.0
    maxgerhardt/ghostl@^1.0.1
    https://github.com/maxgerhardt/espsoftwareserial.git
    madhephaestus/ESP32Servo @ ^1.1.2
    adafruit/Adafruit PWM Servo Driver Library @ ^3.0.1
    dfrobot/DFRobotDFPlayerMini @ ^1.0.6

monitor_filters = esp32_exception_decoder, default
upload_protocol = esptool

[env:esp32-s3]
build_flags = 
    -mfix-esp32-psram-cache-issue
   -D CONFIG_ASYNC_TCP_USE_WDT=0

[env:sparkfun_esp32_iot_redboard]
board = sparkfun_esp32_iot_redboard
platform = ${env:esp32.platform}
board_build.mcu = esp32
lib_deps = 
    ${env.lib_deps}
    ${env:esp32.lib_deps}
monitor_speed = ${env.monitor_speed}
monitor_filters = ${env:esp32.monitor_filters}
upload_protocol = ${env:esp32.upload_protocol}
build_flags = ${env:esp32.build_flags}

[env:adafruit_qtpy_esp32s3_n4r2]
platform = espressif32
board = adafruit_qtpy_esp32s3_n4r2
lib_deps = 
    ${env.lib_deps}
    ${env:esp32.lib_deps}
monitor_speed = ${env.monitor_speed}
monitor_filters = ${env:esp32.monitor_filters}
upload_protocol = ${env:esp32.upload_protocol}
build_flags = 
    ${env.build_flags}
    ${env:esp32.build_flags}
    ${env:esp32-s3.build_flags}
